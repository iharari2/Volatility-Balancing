from typing import Protocol, Optional
from datetime import datetime

class IdempotencyPort(Protocol):
    def reserve(self, key: str, ttl_seconds: int) -> bool: ...
    def set_mapping(self, key: str, order_id: str) -> None: ...
    def get_mapping(self, key: str) -> Optional[str]: ...

class PricingPort(Protocol):
    def last_price(self, symbol: str) -> float: ...

class EventBusPort(Protocol):
    def publish(self, type: str, payload: dict) -> None: ...

class ClockPort(Protocol):
    def now(self) -> datetime: ...

class BrokerPort(Protocol):
    def execute(self, order, price: float): ...